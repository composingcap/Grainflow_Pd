#N canvas 576 245 830 676 12;
#N canvas 643 281 659 429 sustain 0;
#X msg 75 188 start;
#X obj 73 376 grainflow.stereoPan~;
#X obj 73 408 dac~ 1;
#X msg 103 295 overdub \$1;
#X obj 74 221 readsf~ 1 262144;
#N canvas 309 635 450 300 envelope 0;
#X obj 65 152 env~;
#X obj 65 180 snapshot~;
#X obj 142 86 dbtorms;
#X obj 64 121 *~;
#X obj 151 29 loadbang;
#X msg 148 57 64;
#X obj 212 130 metro 10;
#X msg 229 99 1;
#X obj 56 37 inlet~;
#X obj 79 264 outlet;
#X obj 66 217 expr 1-pow($f1/64 \, 2)*0.5;
#X connect 0 0 1 0;
#X connect 1 0 10 0;
#X connect 2 0 3 1;
#X connect 3 0 0 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 2 0;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 10 0 9 0;
#X restore 103 265 pd envelope;
#X obj 74 157 t b b;
#X text 108 123 <= Play soundfile;
#X text 210 220 Overdub is adjusted by the inverse input gain. This means when there is sound it is allowed into the array \, but when there is no sound \, the current state of the array holds., f 49;
#X obj 210 298 phasor~ 6;
#X text 44 96 <= Turn on grainflow.live~;
#X obj 17 97 tgl 25 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 74 124 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 5 35 cnv 19 675 8 empty empty Sustain 10 -12 0 30 #000000 #404040 0;
#X text 17 48 Grainflow can hold onto a sound using a small circular buffer with overdubbing. We can avoid looping artifacts by randomly granulating this buffer., f 89;
#X msg 127 187 open ../assets/bells.wav 0;
#X obj 219 376 grainflow.waveform;
#X obj 311 187 array define \$0_gf_ex_sus 10000;
#X obj 74 335 grainflow.live~ \$0_gf_ex_sus 4 -delayRandom 200;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 3 0 18 0;
#X connect 4 0 5 0;
#X connect 4 0 18 0;
#X connect 5 0 3 0;
#X connect 6 0 0 0;
#X connect 6 1 15 0;
#X connect 9 0 18 1;
#X connect 11 0 18 0;
#X connect 12 0 6 0;
#X connect 15 0 4 0;
#X connect 18 0 1 0;
#X connect 18 1 16 0;
#X connect 18 2 1 1;
#X restore 17 124 pd sustain;
#X text 104 124 <= Infinite reverb effect;
#X text 17 51 These are some example patches that use grainflow to create various effects;
#X obj 17 40 cnv 19 675 8 empty empty Grainflow\ Examples 10 -12 0 30 #000000 #404040 0;
#N canvas 614 270 551 533 shuffle 0;
#X obj 18 41 cnv 15 675 8 empty empty Shuffle 20 -12 0 30 #000000 #373737 0;
#X obj 26 422 dac~ 1, f 10;
#N canvas 1675 414 1315 752 (subpatch) 0;
#X obj 7 2 cnv 15 280 29 empty empty Grainflow\ Shuffle 35 15 0 20 #000000 #ffffff 0;
#N canvas 733 172 450 300 panner 0;
#X obj 35 53 snake~ out 4;
#X obj 35 94 +~;
#X obj 87 94 +~;
#X obj 35 15 inlet~, f 37;
#X obj 35 245 +~;
#X obj 75 245 +~;
#X obj 35 306 outlet~;
#X obj 271 81 line~;
#X obj 271 151 expr~ cos($v1*6.28);
#X obj 206 199 *~;
#X obj 258 199 *~;
#X obj 35 199 *~;
#X obj 51 151 expr~ cos((1-$v1)*6.28);
#X obj 271 53 pack 0 50;
#X obj 94 306 outlet~;
#X connect 0 0 1 0;
#X connect 0 1 2 0;
#X connect 0 2 1 0;
#X connect 0 3 2 0;
#X connect 1 0 9 0;
#X connect 1 0 11 0;
#X connect 2 0 10 0;
#X connect 2 0 11 0;
#X connect 3 0 0 0;
#X connect 3 1 13 0;
#X connect 4 0 6 0;
#X connect 5 0 14 0;
#X connect 7 0 8 0;
#X connect 7 0 12 0;
#X connect 8 0 10 1;
#X connect 8 0 9 1;
#X connect 9 0 4 1;
#X connect 10 0 5 1;
#X connect 11 0 4 0;
#X connect 11 0 5 0;
#X connect 12 0 11 1;
#X connect 13 0 7 0;
#X restore 576 291 pd panner;
#X obj 765 157 phasor~;
#X obj 577 157 +~;
#X obj 701 385 *~;
#X msg 366 35 delay \$1;
#X msg 447 35 delayRandom \$1;
#X floatatom 11 38 5 0 5000 1 delay\ ms - - 12;
#X floatatom 131 38 5 0 5000 1 delay\ rand\ ms - - 12;
#X floatatom 131 67 5 -24 24 1 transpose\ random - - 12;
#X msg 373 86 transpose \$1, f 13;
#X msg 494 86 transposeRandom \$1;
#X obj 712 351 line~;
#X obj 712 327 pack 0 50;
#X msg 20 392 space \$1, f 10;
#X floatatom 11 67 5 -24 24 1 transpose - - 12;
#X floatatom 131 95 5 0 0.95 1 space - - 12;
#X msg 240 351 ngrains 2;
#X msg 331 351 ngrains 4;
#X obj 140 149 vradio 20 1 0 2 empty empty empty 0 -8 0 10 #e4e4e4 #4d4d4d #373737 0;
#X obj 240 320 sel 0 1;
#X text 171 148 2 grains;
#X text 171 170 4 grains;
#X obj 577 656 soundfiler;
#X obj 576 591 loadbang, f 9;
#X floatatom 11 121 5 0 1 1 envelope - - 12;
#X floatatom 131 121 5 0 1 1 spread - - 12;
#X floatatom 11 95 5 1 3000 1 grain\ size - - 12;
#X floatatom 11 149 5 0 0.99 1 feedback - - 12;
#X obj 576 341 snake~ 2;
#X obj 577 57 inlet~;
#X obj 576 485 outlet~;
#X obj 577 259 *~ 0.5;
#X obj 594 123 delread4~ \$0_gf_delay 50;
#X obj 765 129 r \$0_to_gf_shuffle_size;
#X obj 712 291 r \$0_to_gf_shuffle_fb, f 24;
#X obj 701 493 delwrite~ \$0_gf_delay 50;
#X obj 618 168 r \$0_to_gf_shuffle;
#X obj 576 557 array define \$0_gf_shuffle_env;
#X f 37;
#X obj 240 381 s \$0_to_gf_shuffle, f 20;
#X obj 37 256 s \$0_to_gf_shuffle_fb, f 24;
#X obj 21 329 s \$0_to_gf_shuffle_panspread, f 29;
#X obj 20 420 s \$0_to_gf_shuffle, f 20;
#X obj 373 115 s \$0_to_gf_shuffle, f 17;
#X obj 366 64 s \$0_to_gf_shuffle;
#X obj 576 611 symbol \$0_gf_shuffle_env, f 23;
#X obj -126 67 loadbang;
#X msg -126 100 150;
#X obj 110 -75 loadbang;
#X msg 110 -42 250;
#X obj 215 -63 loadbang;
#X msg 215 -30 0.5;
#X obj 309 320 loadbang;
#X obj 11 2 tgl 25 0 empty empty empty 30 12 0 20 #bbbbbb #faff00 #373737 0 1;
#X obj -128 21 s \$0_to_gf_shuffle;
#X obj 576 524 array define \$0_gf_shuffle 25000;
#X f 29;
#X obj 577 213 grainflow.live~ \$0_gf_shuffle 4 -env \$0_gf_shuffle_env 5, f 53;
#X floatatom 11 171 5 0 1 1 density - - 12;
#X msg -112 153 1;
#N canvas 733 172 450 300 minDelay 0;
#X obj 272 400 expr max($f1\\\,$f2);
#X obj 345 183 +;
#X obj 345 149 t b f;
#X obj 488 220 t b f;
#X obj 362 354 t b f;
#X obj 345 109 inlet;
#X obj 301 109 inlet;
#X obj 202 109 inlet;
#X obj 488 109 inlet;
#X obj 272 441 outlet;
#X obj 437 322 loadbang;
#X msg 449 358 0;
#X obj 345 267 expr max(pow(2 \, $f1/12) \, 0)*$f2;
#X obj 576 199 loadbang;
#X msg 588 235 0;
#X connect 0 0 9 0;
#X connect 1 0 12 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 12 0;
#X connect 3 1 12 1;
#X connect 4 0 0 0;
#X connect 4 1 0 1;
#X connect 5 0 2 0;
#X connect 6 0 1 0;
#X connect 7 0 0 0;
#X connect 8 0 3 0;
#X connect 10 0 11 0;
#X connect 11 0 0 1;
#X connect 12 0 4 0;
#X connect 13 0 14 0;
#X connect 14 0 12 1;
#X restore 366 2 pd minDelay;
#X msg 17 279 envelopePosition \$1;
#X obj 392 198 expr 1000/$f1;
#X obj 389 239 s \$0_to_gf_shuffle_size;
#X obj 701 470 expr~ tanh($v1);
#X obj 712 412 lop~ 10;
#X obj 701 441 -~;
#X msg -72 304 density \$1;
#X msg 577 632 read -resize ../assets/grainflow.2DEnvelope.aif \$1, f 51;
#X connect 1 0 4 0;
#X connect 1 0 29 0;
#X connect 1 1 4 0;
#X connect 1 1 29 1;
#X connect 2 0 56 1;
#X connect 3 0 56 0;
#X connect 4 0 64 0;
#X connect 4 0 65 0;
#X connect 5 0 44 0;
#X connect 6 0 44 0;
#X connect 7 0 59 0;
#X connect 8 0 6 0;
#X connect 9 0 11 0;
#X connect 9 0 59 2;
#X connect 10 0 43 0;
#X connect 11 0 43 0;
#X connect 12 0 4 1;
#X connect 13 0 12 0;
#X connect 14 0 42 0;
#X connect 15 0 10 0;
#X connect 15 0 59 1;
#X connect 16 0 14 0;
#X connect 17 0 39 0;
#X connect 18 0 39 0;
#X connect 19 0 20 0;
#X connect 20 0 17 0;
#X connect 20 1 18 0;
#X connect 24 0 45 0;
#X connect 25 0 60 0;
#X connect 26 0 41 0;
#X connect 27 0 61 0;
#X connect 27 0 59 3;
#X connect 28 0 40 0;
#X connect 29 0 31 0;
#X connect 30 0 3 0;
#X connect 32 0 1 0;
#X connect 33 0 3 1;
#X connect 34 0 2 0;
#X connect 35 0 13 0;
#X connect 37 0 56 0;
#X connect 45 0 67 0;
#X connect 46 0 47 0;
#X connect 46 0 58 0;
#X connect 47 0 27 0;
#X connect 48 0 49 0;
#X connect 49 0 8 0;
#X connect 50 0 51 0;
#X connect 51 0 26 0;
#X connect 52 0 17 0;
#X connect 53 0 54 0;
#X connect 56 0 32 0;
#X connect 57 0 66 0;
#X connect 58 0 57 0;
#X connect 59 0 5 0;
#X connect 60 0 42 0;
#X connect 61 0 62 0;
#X connect 63 0 36 0;
#X connect 64 0 65 1;
#X connect 65 0 63 0;
#X connect 66 0 42 0;
#X connect 67 0 23 0;
#X coords 0 1 100 -1 275 210 1 5 0;
#X restore 26 190 graph;
#X msg 27 123 start;
#X obj 26 156 readsf~ 1 262144;
#X obj 26 92 t b b;
#X text 60 58 <= Play soundfile;
#X obj 26 59 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X msg 79 122 open ../assets/bells.wav 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 5 1 8 0;
#X connect 7 0 5 0;
#X connect 8 0 4 0;
#X restore 17 95 pd shuffle;
#N canvas 234 234 856 514 vmultitap 0;
#X text 45 84 <= Turn on grainflow.live~;
#X obj 42 378 grainflow.stereoPan~;
#X obj 40 444 dac~ 1;
#X obj 53 116 loadbang;
#X msg 54 189 streamSet auto 4;
#X obj 130 315 phasor~ 8;
#X msg 229 278 stream 1 delay \$1 \, stream 2 delay \$2 \, stream 3 delay \$3 \, stream 4 delay \$4;
#X obj 6 34 cnv 19 750 8 empty empty vMultitap 10 -12 0 30 #000000 #404040 0;
#X obj 10 79 tgl 25 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#N canvas 0 0 450 250 (subpatch) 0;
#X obj 11 20 hsl 162 19 0 2000 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 10 44 hsl 162 19 0 2000 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 10 69 hsl 162 19 0 2000 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 10 94 hsl 162 19 0 2000 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj -26 96 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 8 152 pack 0 50 500 1000;
#X obj 8 212 outlet;
#X text 149 3 2000 ms;
#X msg 190 39 260;
#X msg 190 69 520;
#X msg 187 100 1040, f 7;
#X obj 269 -45 inlet;
#X connect 0 0 5 0;
#X connect 1 0 5 1;
#X connect 1 0 4 0;
#X connect 2 0 5 2;
#X connect 2 0 4 0;
#X connect 3 0 5 3;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 8 0 1 0;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X connect 11 0 4 0;
#X connect 11 0 10 0;
#X connect 11 0 9 0;
#X connect 11 0 8 0;
#X coords 0 1 100 -1 208 126 1 0 0;
#X restore 227 122 graph;
#X text 6 52 Grainflow can act as a flexible clickless multitap delay;
#X obj 42 411 *~ 0.25;
#X text 232 103 Delay Times;
#X obj 229 251 route list;
#N canvas 733 172 450 300 synth 0;
#X obj 41 280 osc~ 400;
#X obj 41 352 *~;
#X obj 322 134 vline~;
#X obj 41 248 mtof;
#X obj 47 458 outlet~;
#X obj 322 15 loadbang;
#X msg 325 41 1;
#X msg 43 105 0;
#X msg 78 105 2;
#X msg 113 105 3;
#X obj 50 43 random 5;
#X obj 50 73 sel 0 1 2 3 4;
#X msg 148 105 5;
#X msg 183 105 7;
#X obj 41 218 + 60;
#X obj 218 167 + 60;
#X obj 218 105 random 2;
#X obj 218 135 * 12;
#X obj 41 315 exp~ tanh($v1*5);
#X msg 322 105 0 0 0 \, 1 10 0 \, 0 100 10;
#X obj 47 429 -~;
#X obj 322 67 metro 130;
#X obj 60 394 lop~ 100;
#X connect 0 0 18 0;
#X connect 1 0 20 0;
#X connect 1 0 22 0;
#X connect 2 0 1 1;
#X connect 3 0 0 0;
#X connect 5 0 6 0;
#X connect 6 0 21 0;
#X connect 7 0 14 0;
#X connect 8 0 14 0;
#X connect 9 0 14 0;
#X connect 10 0 11 0;
#X connect 11 0 7 0;
#X connect 11 1 8 0;
#X connect 11 2 9 0;
#X connect 11 3 12 0;
#X connect 11 4 13 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X connect 14 0 3 0;
#X connect 15 0 14 1;
#X connect 16 0 17 0;
#X connect 17 0 15 0;
#X connect 18 0 1 0;
#X connect 19 0 2 0;
#X connect 20 0 4 0;
#X connect 21 0 19 0;
#X connect 21 0 10 0;
#X connect 21 0 16 0;
#X connect 22 0 20 1;
#X restore 42 315 pd synth;
#X obj 54 144 t b b;
#X obj 243 378 grainflow.waveform;
#X obj 42 343 grainflow.live~ \$0_gf_ex_vdelay 8 -windowOffset 0.5;
#X obj 467 163 array define \$0_gf_ex_vdelay 96000;
#X connect 1 0 11 0;
#X connect 3 0 15 0;
#X connect 4 0 17 0;
#X connect 5 0 17 1;
#X connect 6 0 17 0;
#X connect 8 0 17 0;
#X connect 9 0 13 0;
#X connect 11 0 2 0;
#X connect 13 0 6 0;
#X connect 14 0 17 0;
#X connect 15 0 9 0;
#X connect 15 1 4 0;
#X connect 17 0 1 0;
#X connect 17 1 16 0;
#X connect 17 2 1 1;
#X restore 17 177 pd vmultitap;
#N canvas 473 272 846 492 aviary 0;
#X obj 25 301 clone -d mc_osc 16;
#X obj 16 94 tgl 25 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 25 195 noise~;
#X obj 42 132 phasor~ 16;
#X obj 58 246 noise~;
#X obj 58 273 expr~ $v1*1+3;
#X obj 25 331 *~;
#X obj 25 442 dac~ 1;
#X obj 25 384 *~ 0.125;
#X obj 25 222 expr~ $v1*200+1000;
#X obj -3 40 cnv 19 731 8 empty empty Aviary 10 -12 0 30 #000000 #404040 0;
#X obj 285 277 soundfiler;
#X obj 284 195 loadbang;
#X obj 25 356 grainflow.stereoPan~ 0.5 1;
#X text 7 60 This example demonstrates how to use granular synthesis to make a soundmass of birds., f 78;
#X text 51 93 <= Turn it on;
#X text 156 300 <= Synthesis in here;
#X obj 42 164 grainflow~ 0 16 -env \$0_gf_ex_aviary_env;
#X obj 363 277 array define \$0_gf_ex_aviary_env;
#X msg 284 242 read -resize ../assets/grainflow.pluck.aif \$1_gf_ex_aviary_env;
#X obj 282 219 \$0;
#X obj 346 196 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X connect 0 0 6 0;
#X connect 1 0 17 0;
#X connect 2 0 9 0;
#X connect 3 0 17 0;
#X connect 4 0 5 0;
#X connect 5 0 0 1;
#X connect 6 0 13 0;
#X connect 8 0 7 0;
#X connect 9 0 0 0;
#X connect 12 0 20 0;
#X connect 13 0 8 0;
#X connect 17 2 0 2;
#X connect 17 2 13 1;
#X connect 17 3 0 3;
#X connect 17 6 6 1;
#X connect 19 0 11 0;
#X connect 20 0 19 0;
#X connect 21 0 20 0;
#X restore 17 203 pd aviary;
#X text 100 197 <= Granular synthesis for the birds;
#X text 113 97 <= Standard fair granulation;
#X text 120 147 <= Become polyphonic;
#X text 130 170 <= more vdelays;
#N canvas 234 234 581 574 multilooper 0;
#X obj 57 212 readsf~ 1 262144;
#X obj 79 304 phasor~ 8;
#X obj 23 108 tgl 25 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 23 411 grainflow.stereoPan~;
#X obj 23 464 dac~ 1;
#X msg 57 274 streamSet auto 8;
#X obj 57 247 loadbang;
#X obj 23 439 *~ 0.5;
#X obj 57 141 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#N canvas 733 172 450 300 loopMaker 0;
#X obj 381 210 route list;
#X obj 381 236 route recordHead;
#X obj 321 395 pack 0 0 250;
#X obj 371 300 f;
#X obj 312 323 t f b;
#X obj 43 260 counter 1 8;
#X obj 381 171 inlet;
#X obj 43 182 inlet;
#X obj 321 480 outlet;
#X msg 321 425 stream \$1 startPoint \$2 \, stream \$1 stopPoint \$3;
#X obj 385 366 + 0.05;
#X obj 43 229 metro 1000;
#X connect 0 0 1 0;
#X connect 1 0 3 1;
#X connect 2 0 9 0;
#X connect 3 0 2 1;
#X connect 3 0 10 0;
#X connect 4 0 2 0;
#X connect 4 1 3 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 7 0 11 0;
#X connect 9 0 8 0;
#X connect 10 0 2 2;
#X connect 11 0 5 0;
#X restore 177 330 pd loopMaker;
#X f 13;
#X text 57 107 <= Turn on the granulator and loop maker;
#X text 94 140 <= Play some input sound;
#X obj 3 36 cnv 15 675 8 empty empty Multilooper 20 -12 0 30 #000000 #373737 0;
#X text 13 48 This example demonstrates how you can assign different loop points to grain streams to create a texture of many loops, f 81;
#X msg 57 178 open ../assets/drumLoop.wav 0 \, start;
#X obj 169 439 grainflow.waveform;
#X obj 169 411 array define \$0_gf_ex_multiloop 600000;
#X obj 23 366 grainflow.live~ \$0_gf_ex_multiloop 16;
#X connect 0 0 17 0;
#X connect 1 0 17 1;
#X connect 2 0 9 0;
#X connect 2 0 17 0;
#X connect 3 0 7 0;
#X connect 5 0 17 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 8 0 14 0;
#X connect 9 0 17 0;
#X connect 14 0 0 0;
#X connect 17 0 3 0;
#X connect 17 1 9 1;
#X connect 17 1 15 0;
#X connect 17 2 3 1;
#X restore 17 257 pd multilooper;
#X text 128 257 <= Make loops with grain streams;
#X text 128 229 <= Warp time in real-time;
#N canvas 490 298 740 588 timestretcher 0;
#X obj 15 155 tgl 24 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 150 377 clone -d mc_rate 4;
#X obj 105 451 grainflow.stereoPan~;
#X obj 105 494 dac~ 1;
#X obj 150 211 readsf~ 1 262144;
#X obj 151 145 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 180 146 <= Play soundfile;
#X obj 44 358 phasor~ 8;
#X obj 308 324 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 198 267 loadbang;
#X text 365 293 <= set the rate of each traversal phasor;
#X text 347 323 <= sync to the input phasor;
#X text 25 69 Using grainflow.record~ and grainflow~ we can perform live granulation with a manipulated clock. In this timestretching example \, we change grainflow.record~'s rate of output traversal phasor and feed those results into grainflows traversal phasor input, f 79;
#X text 51 154 <= Start recording and playback, f 12;
#X msg 198 294 0 1 \, 1 0.9 \, 2 0.7 \, 3 0.5;
#X obj 25 53 cnv 19 675 8 empty empty Timestretcher 10 -12 0 30 #000000 #404040 0;
#X msg 151 176 open ../assets/drumLoop.wav 0 \, start;
#X obj 304 425 grainflow.waveform;
#X msg 308 358 all bang;
#X obj 459 202 array define \$0_gf_ex_ts 480000;
#X obj 105 400 grainflow~ \$0_gf_ex_ts 8;
#X obj 150 240 grainflow.record~ \$0_gf_ex_ts;
#X connect 0 0 20 0;
#X connect 0 0 21 0;
#X connect 1 0 20 1;
#X connect 2 0 3 0;
#X connect 4 0 21 0;
#X connect 5 0 16 0;
#X connect 5 0 8 0;
#X connect 7 0 20 0;
#X connect 8 0 18 0;
#X connect 9 0 14 0;
#X connect 14 0 1 1;
#X connect 16 0 4 0;
#X connect 18 0 1 2;
#X connect 20 0 2 0;
#X connect 20 1 17 0;
#X connect 20 2 2 1;
#X connect 21 0 1 0;
#X restore 17 230 pd timestretcher;
#N canvas 297 508 806 461 harmonizer 0;
#X text 34 96 <= Turn on grainflow.live~;
#X obj 27 335 grainflow.stereoPan~;
#X obj 27 406 dac~ 1;
#X obj 54 196 loadbang;
#X msg 54 225 streamSet auto 4 \, stream 1 transpose 0 \, stream 2 transpose 5 \, stream 3 transpose -7 \, stream 4 transpose -12 \,;
#X text 9 59 Using streams we can distribute different transpositions to different grains creating an easily controlable harmonizer., f 90;
#X text 482 270 It is important to add some delay when tranposing up and also a good idea to add some random delay to avoid phasing artifacts, f 33;
#X obj 27 369 *~ 0.25;
#X obj 11 92 tgl 25 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 9 45 cnv 19 675 8 empty empty Harmonizer 10 -12 0 30 #000000 #404040 0;
#X msg 225 155 start;
#X obj 224 188 readsf~ 1 262144;
#X obj 224 124 t b b;
#X text 258 90 <= Play soundfile;
#X obj 224 91 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X msg 277 154 open ../assets/bells.wav 0;
#X obj 141 272 phasor~ 8;
#X obj 179 338 grainflow.waveform;
#X obj 459 118 array define \$0_gf_ex_harmonize 48000;
#X obj 27 305 grainflow.live~ \$0_gf_ex_harmonize 8 -delay 100 -delayRandom 10, f 63;
#X connect 1 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 19 0;
#X connect 7 0 2 0;
#X connect 8 0 19 0;
#X connect 10 0 11 0;
#X connect 11 0 19 0;
#X connect 12 0 10 0;
#X connect 12 1 15 0;
#X connect 14 0 12 0;
#X connect 15 0 11 0;
#X connect 16 0 19 1;
#X connect 19 0 1 0;
#X connect 19 1 17 0;
#X connect 19 2 1 1;
#X restore 17 150 pd harmonizer;
#X obj 369 8 pdlua;
#X coords 0 0 1 1 85 60 0;
